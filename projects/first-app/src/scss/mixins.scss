@import 'variables';

/* Feature1 queries */
@mixin biggerThan($feature1) {
  // xs is default
  @if $feature1 == xs {
    @first-app-feature1 only screen and (min-width: $xs) {
      @content;
    }
  } @else if $feature1 == sm {
    @first-app-feature1 only screen and (min-width: $sm) {
      @content;
    }
  } @else if $feature1 == md {
    @first-app-feature1 only screen and (min-width: $md) {
      @content;
    }
  } @else if $feature1 == lg {
    @first-app-feature1 only screen and (min-width: $lg) {
      @content;
    }
  } @else if $feature1 == xl {
    @first-app-feature1 only screen and (min-width: $xl) {
      @content;
    }
  }
}
@mixin smallerThan($feature1) {
  @if $feature1 == xs {
    @first-app-feature1 only screen and (max-width: $xs - 1) {
      @content;
    }
  } @else if $feature1 == sm {
    @first-app-feature1 only screen and (max-width: $sm - 1) {
      @content;
    }
  } @else if $feature1 == md {
    @first-app-feature1 only screen and (max-width: $md - 1) {
      @content;
    }
  } @else if $feature1 == lg {
    @first-app-feature1 only screen and (max-width: $lg - 1) {
      @content;
    }
  } @else if $feature1 == xl {
    @first-app-feature1 only screen and (max-width: $xl - 1) {
      @content;
    }
  }
}

/* Borders */
@mixin borderDiv() {
  border: 1px solid $black;
}

/* Full Space */
@mixin fullSpace {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
@mixin fullFixed {
  position: fixed;
  @include fullSpace();
}

@mixin fullAbsolute {
  position: absolute;
  @include fullSpace();
}

@mixin fullRelative {
  position: relative;
  @include fullSpace();
}

@mixin fullStatic {
  position: static;
  @include fullSpace();
}
